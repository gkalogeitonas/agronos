services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: agronos_app
    volumes:
      - ./:/var/www
    environment:
      APP_ENV: "production"
      APP_DEBUG: "false"
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
    networks:
      - agronos_net
      - proxy

  web:
    image: nginx:alpine
    container_name: agronos_web
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    # ports:  # Comment this out or remove when using Traefik
    #  - "8080:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.agronos.rule=Host(`agronos.kalogeitonas.xyz`)"
      - "traefik.http.routers.agronos.entrypoints=websecure"
      - "traefik.http.routers.agronos.tls.certresolver=letsencrypt"
      - "traefik.http.services.agronos.loadbalancer.server.port=80"
      # Add these headers to ensure proper HTTPS handling
      - "traefik.http.middlewares.agronos-headers.headers.customResponseHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.agronos-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.agronos-headers.headers.sslRedirect=true"
      - "traefik.http.routers.agronos.middlewares=agronos-headers"
    depends_on:
      - app
    networks:
      - agronos_net
      - proxy

  db:
    image: mysql:8
    container_name: agronos_db
    restart: unless-stopped
    volumes:
      - agronos_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - agronos_net

networks:
  agronos_net:
  proxy:
    external: true

volumes:
  agronos_db_data:
