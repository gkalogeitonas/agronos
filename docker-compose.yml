services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: agronos_app
    volumes:
      - ./:/var/www
    environment:
      APP_ENV: "production"
      APP_DEBUG: "false"
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
    networks:
      - agronos_net
      - proxy

  web:
    image: nginx:alpine
    container_name: agronos_web
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    # ports:  # Comment this out or remove when using Traefik
    #  - "8080:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.agronos.rule=Host(`agronos.kalogeitonas.xyz`)"
      - "traefik.http.routers.agronos.entrypoints=websecure"
      - "traefik.http.routers.agronos.tls.certresolver=letsencrypt"
      - "traefik.http.services.agronos.loadbalancer.server.port=80"
      # Add these headers to ensure proper HTTPS handling
      - "traefik.http.middlewares.agronos-headers.headers.customResponseHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.agronos-headers.headers.frameDeny=true"
      - "traefik.http.middlewares.agronos-headers.headers.sslRedirect=true"
      - "traefik.http.routers.agronos.middlewares=agronos-headers"
    depends_on:
      - app
    networks:
      - agronos_net
      - proxy

  db:
    image: mysql:8
    container_name: agronos_db
    restart: unless-stopped
    volumes:
      - agronos_db_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - agronos_net

  worker:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: agronos_worker
    command: >
      bash -lc "php /var/www/artisan queue:work database --sleep=3 --tries=3 --timeout=0 --queue=sensor-data,default"
    volumes:
      - ./:/var/www
    environment:
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION}
    depends_on:
      - db
      - app
    restart: unless-stopped
    networks:
      - agronos_net

  sensor-worker:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: agronos_sensor_worker
    command: >
      bash -lc "php /var/www/artisan queue:work database --sleep=1 --tries=3 --timeout=30 --queue=sensor-data"
    volumes:
      - ./:/var/www
    environment:
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION}
    depends_on:
      - db
      - app
    restart: unless-stopped
    networks:
      - agronos_net

  reverb:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: agronos_reverb
    command: >
      bash -lc "php /var/www/artisan reverb:start --host=0.0.0.0 --port=${REVERB_PORT:-8080}"
    volumes:
      - ./:/var/www
    environment:
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      REVERB_HOST: ${REVERB_HOST}
      REVERB_PORT: ${REVERB_PORT}
      REVERB_SCHEME: ${REVERB_SCHEME}
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - db
      - app
    restart: unless-stopped
    # No direct port binding - Traefik handles external access
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reverb.rule=Host(`websocket.kalogeitonas.xyz`)"
      - "traefik.http.routers.reverb.entrypoints=websecure"
      - "traefik.http.routers.reverb.tls.certresolver=letsencrypt"
      - "traefik.http.services.reverb.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.reverb-headers.headers.customResponseHeaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.reverb.middlewares=reverb-headers"
    networks:
      - agronos_net
      - proxy

networks:
  agronos_net:
  proxy:
    external: true

volumes:
  agronos_db_data:
